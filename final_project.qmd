---
title: "Fertility & Infant Mortality Rates"
author: "Leslie Cervantes Rivera & Kevin Le"
format: pdf
execute:
  echo: false
html-math-method: mathjax
---

```{r, cache=TRUE, echo=FALSE, message=FALSE, warning=FALSE}
library(stargazer)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(qtl2)
library(janitor)
library(corrplot)
#library(magrittr)
library(tidyverse)
library(gt)

fertility_data <- read.csv("~/Desktop/UCSB/PSTAT100-final/fertility_data.csv") #fertility data

infant_mortality_biannual_data <- read.csv("~/Desktop/UCSB/PSTAT100-final/infant_mortality_biannual_data.csv") #infant mortality

#Census
median_income <- read.csv('~/Desktop/median_income_2016_2023.csv')
pop_2016 <- read.csv("~/Desktop/pop_profiles/pop_profile_2016.csv")
pop_2017 <- read.csv("~/Desktop/pop_profiles/pop_profile_2017.csv")
pop_2018 <- read.csv("~/Desktop/pop_profiles/pop_profile_2018.csv")
pop_2019 <- read.csv("~/Desktop/pop_profiles/pop_profile_2019.csv")
pop_2021 <- read.csv("~/Desktop/pop_profiles/pop_profile_2021.csv")
pop_2022 <- read.csv("~/Desktop/pop_profiles/pop_profile_2022.csv")
pop_2023 <- read.csv("~/Desktop/pop_profiles/pop_profile_2023.csv")
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
#adding months January to June
fertility_update <- fertility_data %>%
  filter(bmcode %in% c(1, 2, 3)) %>%  
  group_by(state, year) %>%  
  summarise(across(births_age1524:pop_age3544, ~sum(., na.rm = TRUE))) %>%  
  mutate(bacode =1,
         across(pop_total:pop_age3544, ~./3)) %>% 
  ungroup() 

#adding months July to December together
fertility_update2 <- fertility_data %>%
  filter(bmcode %in% c(4, 5, 6)) %>%  
  group_by(state, year) %>%  
  summarise(across(births_age1524:pop_age3544, ~sum(., na.rm = TRUE))) %>%  
  mutate(bacode = 2,
         across(pop_total:pop_age3544, ~./3)) %>% 
  ungroup()

#merging fertility_update and fertility_update2
fertility_merged <- bind_rows(fertility_update, fertility_update2)

#removing year 2024 due to no data
fertility_merged <- fertility_merged %>% 
  filter(!year == 2024)

#creating proportions and fertility rates
fertility_merged2 <- fertility_merged %>% 
  select(state:bacode) %>% 
   mutate(
  prop_births_1524 = births_age1524 / births_total,
         prop_births_2534 = births_age2534 / births_total,
         prop_births_3544 = births_age3544 / births_total,
         prop_births_nohs = births_nohs / births_total,
         prop_births_hs = births_hs / births_total,
         prop_births_somecoll = births_somecoll / births_total,
         prop_births_coll = births_coll / births_total,
         prop_births_married = births_married / births_total,
         prop_births_unmarried = births_unmarried / births_total,
         prop_births_medicaid = births_medicaid / births_total,
         prop_births_nhblack = births_nhblack / births_total,
         prop_births_nhwhite = births_nhwhite / births_total,
         prop_births_hisp = births_hisp / births_total,
         prop_births_otherraceeth = births_otherraceeth / births_total,
         fer_rate_1524 = (births_age1524 / pop_age1524),
         fer_rate_2534 = (births_age2534 / pop_age2534),
         fer_rate_3544 = (births_age3544 / pop_age3544),
         repro_pop = pop_age1524 + pop_age2534 + pop_age3544,
         )

#normalizing births 
infant_mort1 <- infant_mortality_biannual_data |>
  rename("infant_births_total"=births_total) |>
  mutate(across(starts_with("births_"), ~ .x/infant_births_total, .names="prop_{.col}")) |>
  select( c(starts_with("deaths_"),starts_with("prop_births"), infant_births_total, state,year,bacode)) |>
  filter(year >=2016) 

#replace NAs with 0s
infant_mort1 <- infant_mort1 |>
  mutate(across(colnames(infant_mort1), ~ replace_na(.x,0)))

#selecting variables into fertil_merg_filter
fertil_merg_filter <- fertility_merged2 |> select(c(starts_with("prop_births"),births_total, state, year,bacode)) |> select(11:18)

#normalizing and merging
prop_only_merge <- infant_mort1 |>
  left_join(fertil_merg_filter, by=join_by(state,year,bacode)) |>
  mutate(
    norm_births_nhblack = (prop_births_nhblack.x + prop_births_nhblack.y)/2,
    norm_births_nhwhite =( prop_births_nhwhite.x + prop_births_nhwhite.y)/2,
    norm_births_hisp = (prop_births_hisp.x + prop_births_hisp.y)/2,
    norm_births_otherraceeth = (prop_births_otherraceeth.x + prop_births_otherraceeth.y)/2,
    norm_total_births = (infant_births_total+births_total)/2
  ) |>
  mutate(across(starts_with("norm_births_"), ~round(.x*norm_total_births,0), .names="{.col}")) |>
  select(-c(starts_with("prop_"))) |>
  mutate(across(starts_with("deaths_"), ~ round(.x/norm_total_births*1000, 2), .names="infantMort_{.col}")) #|>
  #mutate(across(starts_with("norm_births_"), ~ round(.x/norm_total_births*1000, 2), .names#="fertilityRate_{.col}"))

#merging and creating fertility rate by ethnicity
fertility_mortality <- fertility_merged2 |>
  left_join(infant_mortality_biannual_data, by = join_by(state,year, bacode)) |>
  select(-c(ends_with(".x"), ends_with(".y"), starts_with("deaths"))) |>
  left_join(prop_only_merge, by=join_by(state,year,bacode)) |>
  mutate(fer_rate_nhblack = norm_births_nhblack / pop_nhblack,
         fer_rate_nhwhite = norm_births_nhwhite / pop_nhwhite,
         fer_rate_hisp = norm_births_hisp / pop_hisp,
         fer_rate_otherraceeth = norm_births_otherraceeth / pop_otherraceeth)
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
births_deaths <- fertility_mortality %>% 
  select(state, year, bacode, births_age1524:births_nonmedicaid, fer_rate_1524:repro_pop, exposed_infdeaths, deaths_nhblack:deaths_total, infant_births_total:infantMort_deaths_total, fer_rate_nhblack:fer_rate_otherraceeth, pop_age1524:pop_age3544 ) |>
  mutate(norm_total_births = round(norm_total_births, 0),
         region = case_when(
           state %in% c("California", "Oregon", "Washington", "Idaho", "Nevada", "Utah", "Colorado", "Montana", "Wyoming", "Hawaii", "Alaska") ~ "West",
           state %in% c("Arizona", "New Mexico", "Texas", "Oklahoma") ~ "Southwest",
           state %in% c("Kansas", "Nebraska", "South Dakota", "North Dakota", "Missouri", "Iowa", "Minnesota", "Illinois", "Wisconsin", "Indiana", "Ohio", "Michigan") ~ "Midwest",
           state %in% c("Arkansas", "Louisiana", "Mississippi", "Alabama", "Tennessee", "Georgia", "Florida", "South Carolina", "North Carolina", "Kentucky", "Virginia", "West Virginia", "Delaware", "District of Columbia") ~ "Southeast",
           state %in% c("New Jersey", "Pennsylvania", "Maryland", "Connecticut", "Rhode Island", "Massachusetts", "Vermont", "New Hampshire", "Maine", "New York") ~ "Northeast",
           TRUE ~ "missing"
         ))

births_deaths <- births_deaths %>% 
  left_join(median_income, by = c("state", "year"))

pop_state <- fertility_mortality |> select(year,matches("pop_age[0-9]")) |> unique() |>
  aggregate(. ~ year, FUN=sum)

fertility_rates <- fertility_mortality |> select(year,matches("births_age[0-9]")) |>
  aggregate(. ~ year, FUN=sum) |>
  left_join(pop_state) |>
  mutate(fert_age1524 = births_age1524/pop_age1524 * 1000,
         fert_age2534 = births_age2534/pop_age2534 * 1000,
         fert_age3544 = births_age3544/pop_age3544 * 1000) |>
  select(year,starts_with("fert_age"), starts_with("pop_age"), starts_with("births_age")) |>
  mutate(tfr = (fert_age1524+fert_age2534+fert_age3544) * 10 /1000,
         gen_fr = ((births_age1524+births_age2534+births_age3544)/(pop_age1524 + pop_age2534 + pop_age3544))  * 1000)

fertility_rates <- fertility_rates %>% 
  select(year, tfr, gen_fr )

births_deaths <- births_deaths %>% 
  left_join(fertility_rates, by = "year")
```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
births_deaths1 <- births_deaths |>
  select(state,year,starts_with("deaths"),starts_with("norm_births"),starts_with("births_age")) |>
  group_by(state,year) |> #added this
  summarize(across(everything(), sum))

infantMort_eth <- births_deaths1 |>
  group_by(state,year) |>
  summarize(across(everything(), sum)) |>
  select(state,year,deaths_nhblack,deaths_nhwhite,deaths_hisp,deaths_otherraceeth, 
         matches("norm_births_[a-z]")) |>
  mutate(minority_deaths = deaths_nhblack + deaths_hisp + deaths_otherraceeth,
         minority_births = norm_births_nhblack + norm_births_hisp + norm_births_otherraceeth) |>
  mutate(Minority_mort = minority_deaths/minority_births,
         Nonminority_mort = deaths_nhwhite/norm_births_nhwhite,
         InfantMort_GAP = (Minority_mort - Nonminority_mort)*100) |> 
  filter(year!=2020) |>
  select(state,year,Minority_mort,Nonminority_mort,InfantMort_GAP) |>
  ungroup() 

infantMort_eth1 <- infantMort_eth |> select(state,year,InfantMort_GAP)

infantMort1 <- births_deaths1 |> 
  mutate(
    total_mort = (deaths_total/(norm_births_nhblack + norm_births_nhwhite + norm_births_hisp + norm_births_otherraceeth))*1000
  ) |>
  select(state,year,total_mort)

popEth_state <- fertility_mortality |> select(state,year,pop_nhblack,pop_nhwhite,pop_hisp,pop_otherraceeth) |> unique() |>
  group_by(state,year) |>
  mutate(pop_minority = pop_nhblack + pop_hisp + pop_otherraceeth)

TFR_GAP <- fertility_mortality |> 
  select(state,year,norm_births_nhblack,norm_births_nhwhite,
         norm_births_hisp,norm_births_otherraceeth) |>
  group_by(state,year) |>
  summarize(across(everything(), sum)) |>
  left_join(popEth_state) |> # Minority Fertility as eth_birth/pop_minority
  mutate(Minority_fer = (norm_births_nhblack/pop_minority + norm_births_hisp/pop_minority + norm_births_otherraceeth/pop_minority) * 30*1000, # multiply by 30 to correct for age gap
         Nonminority_fer = norm_births_nhwhite/pop_nhwhite * 1000*30,
  TFR_gap = (Minority_fer - Nonminority_fer)/1000
         ) |>
  select(year,Minority_fer,Nonminority_fer,TFR_gap) |> ungroup()

TFR_GAP1 <- TFR_GAP |> ungroup() |> # for merging with Census data
  select(state,year,TFR_gap) |>
  filter(year!=2020)
```

```{r, cache=TRUE, echo=FALSE, message=FALSE, warning=FALSE}
# TFR by state and year
pop_year <- fertility_mortality |> select(year,state,matches("pop_age[0-9]")) |> filter(year!=2020) |>
  unique() |>
  group_by(state,year)

total_fertilityUS <- fertility_mortality |> select(year,state,matches("births_age[0-9]")) |> 
  filter(year!=2020) |>
  group_by(state,year) |>
  summarize(across(everything(), sum)) |>
  left_join(pop_year) |>
  mutate(fert_age1524 = births_age1524/pop_age1524 * 1000,
         fert_age2534 = births_age2534/pop_age2534 * 1000,
         fert_age3544 = births_age3544/pop_age3544 * 1000) |>
  select(year,starts_with("fert_age")) |>
  mutate(total_fer = (fert_age1524+fert_age2534+fert_age3544)*10) 

TFR_USstyr <- total_fertilityUS |> select(state,year,total_fer) |>
  mutate(total_fer = total_fer/1000) |>
  ungroup()

```

# Background

The Infant Mortality and Fertility Rates Dataset provides data on infant mortality rates (measured as the number of infant deaths per 1,000 live births) and fertility rates (measured as the number of births per 1,000 women per year) across U.S. states. The Infant Mortality Dataset covers the years 2003 to 2023, while the Fertility Rates Dataset spans 2016 to 2023.

Infant mortality refers to the death of a baby that occurs before their first birthday. It is a key indicator of a population's overall health, reflecting the social, economic, and healthcare conditions within a state. High infant mortality rates could indicate insufficient healthcare access or inequalities in medical services, particularly in low-income and rural areas. Over the years, improvements in screening and treatment for illnesses, better obstetric management, and neonatal care have contributed in the declining of infant mortality rates, but disparities still exist within state and demographic groups (Marino).

Fertility rate represents the total number of children a woman has during her reproductive years (“Fertility Rate.”). It plays a crucial role in population growth and demographical planning, influencing services such as education, healthcare, and workforce development. From 2007 to 2022, the fertility rate has dropped by about 19%, influenced by the health of the economy, social, health, and historical events (Hickerson). These changes have long-term implications, as it leads to an aging population, smaller workforce, and economic strain on government budgets.

The Population Demographics dataset provides data on the years 2016 to 2023, providing information on total population, as well as the distribution of sex and age, marital status, educational attainment, SNAP participation, household median income, and health insurance coverage by ethnicity. These variables represent key social, economic, and healthcare conditions across U.S. states.

Ryabov (2015) found that the relationship between Total Fertility Rate (TFR) and various human development indicators "a negative association between selected human development indicators and TFR exists in suburban and rural counties, as well as in the United States as a whole." However, the analysis was inconclusive for urban counties; some indicators such as median income were positively associated with TFR, whereas higher educational attainment negatively associated with TFR.

In 2019, Hamilton et al. reported a TFR of 1,705 expected births per 1,000 women for all women aged 15–49 in the U.S. The TFR decreased as the level of education increased, starting from women with a 12th-grade education or less through those with an associate’s or bachelor’s degree. However, the TFR began to rise again among women with a bachelor’s degree and continued to increase for those holding a doctorate or professional degree.

# Data Sources

## Birth Rates and Infant Mortality Datasets

The datasets come from the Centers for Disease Control and Prevention (CDC), collected from anywhere a person receives healthcare. This may lead to limitations as it is up to the city, county, and state to decide what information is collected, and how and when it can be shared by the CDC (“Where Does Our Data Come From.”).

## Population Demographics

The dataset is sourced from the United States Census Bureau under the American Community Survey (ACS) category, specifically the *Selected Population Profile in the United States*. The Census Bureau collects data directly from respondents through censuses and surveys, with primary sources also including administrative data.

It should be noted that data for 2020 is not included due to disruptions caused by the COVID-19 pandemic. To protect the safety of their employees and respondents, the Census Bureau suspended ACS data collection operations, including mail surveys, in-person followups with non-respondents, and data collection from group quarters such as nursing homes, college dorms, and prisons.

# Question of Interest

How do educational, and regional factors influence birth rates and infant mortality trends across the US from 2016 to 2023? Specifically do certain characteristics such as income, and public services like food stamps and health care have a negative, positive, or no effect. As politicians continue to attack the Department of Education, propose cuts on SNAP benefits, and limit access to reproductive healthcare, we are wondering if this will affect future population growth. 

-explain what a satisfactory answer might look like 

```{r, echo=FALSE, message=FALSE, warning=FALSE}
drop_cols <- c("one_race","two_race","three_race","four_race","total_num_races")

pop_2016m1 <- pop_2016
pop_2017m1 <- pop_2017
pop_2018m1 <- pop_2018
pop_2019m1 <- pop_2019
pop_2021m1 <- pop_2021
pop_2022m1 <- pop_2022
pop_2023m1 <- pop_2023

clean_df <- function(df, drop_c){
  # function to compactly reorganize dataframes
  df1 <- df
  df1 <- df1 |>select(year,everything(),-all_of(drop_c)) |>
    tidyr::separate(ethnicity,"ethnicity",extra="drop")
  return(df1)
}
pop_2016m2 <- pop_2016m1 |> clean_df(drop_cols)
pop_2017m2 <- pop_2017m1 |> clean_df(drop_cols)
pop_2018m2 <- pop_2018m1|> clean_df(drop_cols)
pop_2019m2 <- pop_2019m1|> clean_df(drop_cols)
pop_2021m2 <- pop_2021m1|> clean_df(drop_cols)
pop_2022m2 <- pop_2022m1|> clean_df(drop_cols)
pop_2023m2 <- pop_2023m1 |> select(year,everything(),-all_of(drop_cols)) |>
    tidyr::separate(population_group,"ethnicity",extra="drop")

pop_pre2020 <- rbind(pop_2016m2,pop_2017m2,pop_2018m2,pop_2019m2)
pop_post2020 <- rbind(pop_2021m2,pop_2022m2,pop_2023m2)
main_pop <- rbind(pop_pre2020,pop_post2020)

main_pop1 <- main_pop |> # convert to raw numbers
  mutate(
    across(matches("total_[a-z]+_pop"), ~ .x/100*total_pop),
    across(matches("pop_age[0-9]"), ~ .x/100*total_pop),
    across(matches("ms_[a-z]"), ~ .x/100*marital_status_pop),
    across(.cols = c(matches("edu_[a-z]") & !matches("edu_attain_pop")), ~ .x/100*edu_attain_pop),
    SNAP = SNAP/100,
    across(matches("hc_[a-z]"), ~ .x/100*health_cov_pop)
  )
main_pop2 <- main_pop1 |> select(-ethnicity) |> # convert variables to be proportional to total_pop
  group_by(state,year) |>
  summarize(across(everything(), sum)) |> ungroup() |>
  mutate(
  across(matches("total_[a-z]+_pop"), ~ .x/total_pop),
  across(matches("pop_age[0-9]"), ~ .x/total_pop),
  across(matches("ms_[a-z]"), ~ .x/total_pop),
  across(.cols = c(matches("edu_[a-z]") & !matches("edu_attain_pop")), ~ .x/total_pop),
  across(matches("hc_[a-z]"), ~ .x/total_pop)
  )
main_pop3 <- main_pop2 |> 
  select(-c(total_pop,marital_status_pop,edu_attain_pop,income_households,health_cov_pop)) 

main_pop4 <- main_pop3 |> select(-c(total_male_pop,total_fem_pop)) |> # Join CDC data with Census
  left_join(TFR_USstyr, by = c("state", "year")) |>
  left_join(infantMort1, by = c("state", "year"))

```

# Exploratory Data Analysis (EDA)

## Fertility and Infant Mortality Rates

$$
\begin{aligned}
\text{fert\_age1524} &= \frac{\text{births\_age1524}}{\text{pop\_age1524}} \times 1000 \\
\text{fert\_age2534} &= \frac{\text{births\_age2534}}{\text{pop\_age2534}} \times 1000 \\
\text{fert\_age3544} &= \frac{\text{births\_age3544}}{\text{pop\_age3544}} \times 1000 \\
\text{total\_fer} &= (\text{fert\_age1524} + \text{fert\_age2534} + \text{fert\_age3544}) \times 10
\end{aligned}
$$

To calculate total fertility rate, we divided each age group by their designated population and multiplied them by 1000 to standardize into births per 1000 women according to the CDC. We then added the proportions and multiplied by 10, to convert the rate into an estimate of the total number of children a woman would have over her reproductive life. We converted it back to births to woman, for easier interpretation.

$$
\text{total\_mort} = \frac{\text{deaths\_total}}{\text{total\_births}}
$$

## Initial Exploration of CDC Data

```{r, cache=TRUE, echo=FALSE, message=FALSE, warning=FALSE}
inf_fer_rates  <- births_deaths |> select(state, year, bacode, infantMort_deaths_nhblack:region, -infantMort_deaths_con,-infantMort_deaths_noncon,
                        -infantMort_deaths_neo,-infantMort_deaths_total) 

inf_fer_rates1 <- inf_fer_rates |> select(state:infantMort_deaths_otherraceeth,region) |>
  pivot_longer(
    cols = starts_with("infantMort_"),
    names_to = "ethnicity",
    values_to = "InfantMortality"
  ) |>
  mutate(ethnicity = recode(ethnicity,
                            "infantMort_deaths_hisp" = "Hispanic",
                            "infantMort_deaths_nhblack" = "Non-Hispanic Black",
                            "infantMort_deaths_nhwhite" = "Non-Hispanic White",
                            "infantMort_deaths_otherraceeth" = "Other Race"))


inf_fer_rates2 <- inf_fer_rates  |> select(c(state:bacode, fer_rate_nhblack:region)) |>
  pivot_longer(
    cols= starts_with("fer_rate"),
    names_to = "ethnicity",
    values_to = "FertilityRate"
  ) |> 
  mutate(ethnicity = recode(ethnicity,
                            "fer_rate_hisp" = "Hispanic",
                            "fer_rate_nhblack" = "Non-Hispanic Black",
                            "fer_rate_nhwhite" = "Non-Hispanic White",
                            "fer_rate_otherraceeth" = "Other Race"))

inf_fer_rates_main <- inf_fer_rates1 |> 
  left_join(inf_fer_rates2, by=join_by(state,year,ethnicity,region,bacode))

inf_fer_rates_main |> ggplot(aes(y=InfantMortality, x=FertilityRate, col=ethnicity)) +
  geom_point() +
  facet_wrap(vars(region))

```

When analyzing birth rates, it's important to account for the relationship between fertility rates and infant mortality. Since higher fertility rates often correlate with higher raw infant mortality, we normalize the data by calculating both the fertility rate and the infant mortality rate. To improve visibility, we grouped states by region, because coloring by state was unclear.

Across all five regions, the "Other race" category consistently shows both lower fertility and lower infant mortality rates. For Non-Hispanic White populations, fertility rates exhibit little variation, whereas their infant mortality rates show the highest variation among the four ethnic groups.

For Non-Hispanic Black populations, the relationship between fertility rate and infant mortality generally cluster towards lower fertility rate and lower infant mortality. However, there is a noticeable increase in the variation of infant mortality in the Southeast, similar to Non-Hispanic White populations.

Finally, among Hispanic populations, there is a trend of higher fertility rates, especially in the Midwest, Northeast, and Southeast regions. Interestingly, Hispanic groups also tend to have lower infant mortality rates compared to other ethnicities in all regions except for Southwest.

Coloring and filtering by year did not yield a noticeable difference in the structure of each ethnicity.

## Correlation Matrix

The correlation matrix allow us to examine the relationships between `total_fer` and `total_mort` with various socioeconomic and demographic factors. 

```{r, cache=TRUE, echo=FALSE, message=FALSE, warning=FALSE}
main_pop4 |>
  select(-c("state", "year")) |>
  cor(use = "complete.obs") |>
  corrplot()
```

- `total_fer` and `edu_somecoll`: States with a higher proportion of individuals with some college education tend to have a slightly higher total fertility rate.

- `total_fer` and `ms_nevermarried`: States with a higher proportion of never-married individuals tend to have a moderately lower total fertility rate, suggesting marital status plays a role in fertility patterns.

- `total_fer` and `edu_grad`: States with a higher proportion of individuals with graduate degrees tend to have a lower fertility rate, possibly due to career and individual prioritization.

- `total_mort` and `SNAP`: States with a higher proportion of SNAP consumers tend to have a slightly higher total mortality rate, possibly reflecting low financial stability.

- `total_mort` and `no_hc`: States with a higher proportion of individuals with no health coverage tend to have a higher total mortality rate.

- `total_mort` and `edu_bach`/`edu_grad`: There are moderate negative correlations between total infant mortality rates and higher education levels, suggesting states with a greater population of individuals with a graduate degree or higher tend to experience lower mortality rates, potentially due to better access to resources. 

- `total_fer`/`total_mort` and `pop_age517`: In both total fertility and mortality rates, states with a higher proportion of individuals aged between 5 and 17 (particularly those aged 15 to 17) tend to have slightly higher rates.

In the scope of our project, we are going to pick the variables that are the most correlated to total fertility and infant mortality rates. These variables are education attainment, economic indicators, and health coverage. These variables align with social, economic, and healthcare conditions.

# Principal Component Analysis (PCA)

```{r, echo=FALSE, message=FALSE, warning=FALSE}
no_state <- main_pop4 |>
  select(-c("state", starts_with("pop_age"), starts_with("ms_"),year)) 

pca <- prcomp(no_state, center = TRUE, scale. = TRUE)

var_ratios <- (pca$sdev^2) / sum(pca$sdev^2)

pca_var_explained <- data.frame(
  Component = seq(1, length(var_ratios)),
  Proportion_of_variance_explained = var_ratios
)
pca_var_explained <- pca_var_explained %>% 
  mutate(Cumulative_variance_explained = cumsum(Proportion_of_variance_explained))

var_explained_plot <- ggplot(pca_var_explained, aes(x = Component)) +
  
  # Proportion of variance explained (green line & points)
  geom_line(aes(y = Proportion_of_variance_explained, color = "Proportion of variance explained"), size = 1) +
  geom_point(aes(y = Proportion_of_variance_explained, color = "Proportion of variance explained"), size = 2) +
  
  # Cumulative variance explained (blue line & points)
  geom_line(aes(y = Cumulative_variance_explained, color = "Cumulative variance explained"), size = 1) +
  geom_point(aes(y = Cumulative_variance_explained, color = "Cumulative variance explained"), size = 2) +
  
  # Custom colors for lines
  scale_color_manual(values = c("Proportion of variance explained" = "#57A44C", 
                                "Cumulative variance explained" = "#5276A7")) +
  
  # Axis labels and theme adjustments
  labs(x = "Component", y = "Variance Explained", color = "Legend") +
  theme_minimal()
print(var_explained_plot)

```

```{r, echo=FALSE, message=FALSE, warning=FALSE}
num_pc <- 5
loading_df <- pca$rotation[, 1:num_pc]
loading_plot_df <- loading_df %>% 
  as.data.frame() %>% 
  tibble::rownames_to_column(var = "Variable") %>% 
  pivot_longer(cols = -Variable, names_to = "Principal_Component",
               values_to = "Loading")
loading_plot_df <- loading_plot_df %>% 
  mutate(zero = 0)

loadings_plot <- ggplot(loading_plot_df, aes(x = Loading, y = Variable, color = Principal_Component)) +
geom_line(aes(group = Variable)) + geom_point() + geom_vline(aes(xintercept = zero), color = "black", linetype = "dashed", size = 0.5) + facet_wrap(~ Principal_Component, scales = "free_y") + labs(x = "Loading", y = "", color = "Principal Component") + theme_minimal() + theme(legend.position = "none")

print(loadings_plot)
```

[Name for PC1:]{.underline} *"Education Attainment and Infant Mortality"*

The variables that are most influential are `edu_bach`, `edu_grad`, `ed_less_hs`, `total_mort`, and `hc_private`. States with higher levels of educational attainment tend to have lower total infant mortality rates, while states with larger populations of individuals with only a high school diploma or less show a correlation with higher total infant mortality. Additionally, private healthcare is negatively correlated with infant mortality and positively associated with higher levels of education.

Positive PC1 represents states with lower infant mortality due to higher education and better health coverage, while negative PC1 represents those with higher infant mortality due to lower education and limited to no health coverage.

[Name for PC2:]{.underline} *"Education and Income"*

The variables that are most influential for PC2 are `edu_somecoll`, `income_median`, `SNAP`, `total_fer`, and `edu_grad`. States with higher rates of residents who only attained some college education has higher TFR, on the other hand, states with higher total graduates, higher income median, and SNAP rate signaled lower TFR.

[Name for PC3:]{.underline} *"Public/None Healthcare Coverage and High School Educated Population"*

The variables that are most influential for PC3 are `hc_public`, `edu_hs`, `income_median`, and `hc_nohc`. Higher PC3 scores are associated with states that have greater public healthcare coverage and a larger proportion of the population with only a high school diploma. Conversely, negative PC3 scores are linked to states with higher median incomes and a greater percentage of people without health insurance coverage.

[Name for PC4:]{.underline} *"Private/None Healthcare Coverage and SNAP"*

The variables that are most influential for PC4 are `hc_nohc`, `SNAP`, `hc_private`, `edu_hs`, and `total_mort`. High PC4 scores explain states who has higher SNAP rates, private healthcare coverage, and proportion of only high school diploma has higher infant mortality.

[Name for PC5:]{.underline} *"Education Attain and Fertility Rate"*

The variables that are most influential for PC5 are `edu_somecoll`, `edu_hs`, `total_fer`, and `edu_grad`. PC5 indicates that states with higher proportion of residents who only attained some college education explains lower TFR.

The variables that are most influential for PC5 are `edu_somecoll`, `edu_hs`, `total_fer`, and `edu_grad`. PC5 indicates that states with higher proportion of residents who only attained some college education explains lower TFR.

Overall, it seems that educational attainment explained a lot of TFR and infant mortality.

# Linear Regression

In this part, we'll use linear regression to see which predictors are significant for each year. We are going to regress total fertility and total infant mortality rates on education attainment, economic indicators, and health coverage.

$$
\text{total\_fer} = \beta_0 + 
\underbrace{\beta_1 \text{less hs}_i + \cdots + \beta_5 \text{grad}_i}_{\text{education attainment}} + 
\underbrace{\beta_6 \text{income\_median}_i + \beta_7 \text{SNAP}_i}_{\text{economic indicators}} + 
\underbrace{\beta_8 \text{private}_i + \cdots + \beta_{10} \text{no coverage}_i}_{\text{health coverage}} \\ + 
 \epsilon_i
$$

$$
\text{total\_mort} = \beta_0 + 
\underbrace{\beta_1 \text{less hs}_i + \cdots + \beta_5 \text{grad}_i}_{\text{education attainment}} + 
\underbrace{\beta_6 \text{income\_median}_i + \beta_7 \text{SNAP}_i}_{\text{economic indicators}} + 
\underbrace{\beta_8 \text{private}_i + \cdots + \beta_{10} \text{no coverage}_i}_{\text{health coverage}} \\ + 
 \epsilon_i
$$

```{r, echo=FALSE, message=FALSE, warning=FALSE}

lr_state <- main_pop4 |>
  select(-c(starts_with("ms_"),starts_with("pop_age")))

lr_state16 <- lr_state |>
  filter(year == 2016) 

lr_state17 <- lr_state |>
  filter(year == 2017) 
  
lr_state18 <- lr_state |>
  filter(year == 2018)

lr_state19 <- lr_state |>
  filter(year == 2019)

lr_state21 <- lr_state |>
  filter(year == 2021)

lr_state22 <- lr_state |>
  filter(year == 2022)

lr_state23 <- lr_state |>
  filter(year == 2023)

print("2016")
lin_reg16 <- lm(total_fer ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state16)
#summary(lin_reg16)
print("2017")
lin_reg17 <- lm(total_fer ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state17)
#summary(lin_reg17)
print("2018")
lin_reg18 <- lm(total_fer ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state18)
# summary(lin_reg18)
print("2019")
lin_reg19 <- lm(total_fer ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state19)
# summary(lin_reg19)
print("2021")
lin_reg21 <- lm(total_fer ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state21)
# summary(lin_reg21)
print("2022")
lin_reg22 <- lm(total_fer ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state22)
# summary(lin_reg22)
print("2023")
lin_reg23 <- lm(total_fer ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state23)
# summary(lin_reg23)
print("2016")
lin_reg16_mor <- lm(total_mort ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state16)
# summary(lin_reg16_mor)
print("2017")
lin_reg17_mor <- lm(total_mort ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state17)
# summary(lin_reg17_mor)
print("2018")
lin_reg18_mor <- lm(total_mort ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state18)
# summary(lin_reg18_mor)
print("2019")
lin_reg19_mor <- lm(total_mort ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state19)
# summary(lin_reg19_mor)
print("2021")
lin_reg21_mor <- lm(total_mort ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state21)
# summary(lin_reg21_mor)
print("2022")
lin_reg22_mor <- lm(total_mort ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state22)
# summary(lin_reg22_mor)
print("2023")
lin_reg23_mor <- lm(total_mort ~ edu_less_hs + edu_hs + edu_somecoll + edu_bach +edu_grad + income_median+ SNAP + hc_private + hc_public + hc_nohc, data = lr_state23)
# summary(lin_reg23_mor)
```

Running the linear regression for each year in 2016 to 2023, we discovered education attainment, less high school to graduate education, and health care are the most significant. As a reminder, 2020 is not included due to COVID-19 disruptions. One thing we noticed was SNAP was significant pre-COVID and not significant post-COVID. (explain maybe why)

The summaries indicate as the proportion of individuals with less knowledge to more, the state's fertility rate decreases. This suggests adults are delaying traditional markers of adulthood such as getting a job, getting married, and having children. This causes adults to have children later on life, which also means having fewer due to reproductive health.  

For total infant mortality, we analyzed education attainment is the most significant predictor from 2016 to 2023. This may suggest states with higher proportions of individuals with degrees have better access to health care resources. Median income was found to be statistically significant to total infant mortality, but essentially increases to approximately 0, making no difference. 

We can conclude educational attainment is significant to both total fertility and infant mortality rate, followed by health insurance coverage.

## Education Gap

```{r, echo=FALSE, message=FALSE, warning=FALSE}
# create two tables where edu_somcoll is grouped with _hs, _less_hs and another table with _bach and _grad grouped.
# check states with higher educational attainment and their region, see how well it correlates with the regions in our initial EDA.
edu_gap <- main_pop4 |> select(state,year,starts_with("edu_")) |>
  mutate(edu_noDegree = edu_less_hs + edu_hs + edu_somecoll,
         edu_Degree = edu_bach + edu_grad,
         edu_gap = edu_Degree - edu_noDegree) |>
  select(state,year,edu_gap)

main_popEDU <- main_pop4 |> select(state,year,income_median,starts_with("hc_"),total_fer,total_mort) |>
  left_join(edu_gap) |> select(-year) |>
  group_by(state) |>
  arrange(desc(abs(edu_gap))) |> slice(1) |> # get years for states with biggest gaps
  ungroup() |>
  mutate(region = case_when(
           state %in% c("California", "Oregon", "Washington", "Idaho", "Nevada", "Utah", "Colorado", "Montana", "Wyoming", "Hawaii", "Alaska") ~ "West",
           state %in% c("Arizona", "New Mexico", "Texas", "Oklahoma") ~ "Southwest",
           state %in% c("Kansas", "Nebraska", "South Dakota", "North Dakota", "Missouri", "Iowa", "Minnesota", "Illinois", "Wisconsin", "Indiana", "Ohio", "Michigan") ~ "Midwest",
           state %in% c("Arkansas", "Louisiana", "Mississippi", "Alabama", "Tennessee", "Georgia", "Florida", "South Carolina", "North Carolina", "Kentucky", "Virginia", "West Virginia", "Delaware", "District of Columbia") ~ "Southeast",
           state %in% c("New Jersey", "Pennsylvania", "Maryland", "Connecticut", "Rhode Island", "Massachusetts", "Vermont", "New Hampshire", "Maine", "New York") ~ "Northeast",
           TRUE ~ "missing"
         )) |>
  select(region,total_fer,total_mort,edu_gap,everything()) |>
  arrange(edu_gap,region)

main_popEDU |>
  select(state, region, total_fer, total_mort, edu_gap, hc_private, hc_public, hc_nohc) |>
  mutate(
    state = case_when(
      state == "West Virginia" ~ "WV",
      state == "Nevada" ~ "NV",
      state == "Arkansas" ~ "AR",
      state == "Mississippi" ~ "MS",
      state == "Kentucky" ~ "KY",
      state == "Louisiana" ~ "LA",
      TRUE ~ state
    ),
    region = case_when(
      region == "Northeast" ~ "NE",
      region == "Southeast" ~ "SE",
      region == "West" ~ "W",
      region == "Northwest" ~ "NW",
    TRUE ~ state
    )
  ) |>
  head() |>
  gt() |>
  tab_header(
    title = "Sorted by Educational Attainment Gap"
  ) |>
  cols_label(
    state = "State",
    region = "Region",
    total_fer = "TFR",
    total_mort = "TIMR",
    edu_gap = "EDU Gap",
    #income_median = "Median Income ($)",
    hc_private = "Private H. Ins.",
    hc_public = "Public H. Ins.",
    hc_nohc = "No H. Ins."
  ) #|>
  #fmt_number(columns = income_median, suffixing = TRUE) 

main_popEDU |>
  select(state, region, total_fer, total_mort, edu_gap, hc_private, hc_public, hc_nohc) |>
  mutate(
    state = case_when(
      state == "Connecticut" ~ "CT",
      state == "Virginia" ~ "VA",
      state == "Colorado" ~ "CO",
      state == "Maryland" ~ "MD",
      state == "Massachusetts" ~ "MA",
      state == "District of Columbia" ~ "DC",
      TRUE ~ state
    ),
    region = case_when(
      region == "Northeast" ~ "NE",
      region == "Southeast" ~ "SE",
      region == "West" ~ "W",
      region == "Northwest" ~ "NW",
    TRUE ~ state
    )
  ) |>
  tail(, 7) |>
  gt() |>
  tab_header(
    title = "Sorted by Educational Attainment Gap"
  ) |>
  cols_label(
    state = "State",
    region = "Region",
    total_fer = "TFR",
    total_mort = "TIMR",
    edu_gap = "EDU Gap",
    #income_median = "Median Income ($)",
    hc_private = "Private H. Ins.",
    hc_public = "Public H. Ins.",
    hc_nohc = "No H. Ins."
  ) #|>
  #fmt_number(columns = income_median, suffixing = TRUE)

main_popEDU |>
  select(-c(income_median,starts_with("hc_"),state)) |>
  group_by(region) |>
  summarize(mean_TFR = mean(total_fer),
          mean_TotalMort = mean(total_mort),
          Average_EducationGap = mean(edu_gap)) |>
  arrange(Average_EducationGap) |>
  gt() |>
  cols_label(
    region = "Region",
    mean_TFR = "Mean TFR",
    mean_TotalMort = "Mean TIMR",
    Average_EducationGap = "Mean EDU Gap"
  )
```

The education gap is calculated by adding the proportions of less than high school, high school, and some college, then subtracting this from the proportion of bachelors and graduate school summed. I think we should take the average? And talk about how D.C is an outlier.

As observed in our initial exploration, states in the Southeast region, which have a lower proportion of highly educated residents, tend to exhibit higher average total fertility rates per woman and higher average total mortality rates per 100 live births. In contrast, states in the Northeast, which have a higher population of highly educated residents (though the educational gap remains negative), tend to show lower average total fertility rates and lower average total mortality rates.

# Conclusion

- fertility rate vs infant mortality rate
- correlation matrix
- pca
- linear regression
- education gap 
- problems
  - data by ethnicity, 

# Sources

“Fertility Rate.” *Encyclopædia Britannica*, Encyclopædia Britannica, Inc., www.britannica.com/topic/fertility-rate. (2025).

Hickerson, Ali. “The US Fertility Rate Is Decreasing: What It Means for the Nation’s Future \| News \| Citynewsokc.Com.” *United States Fertility Rate Is Dropping*, www.citynewsokc.com/news/the-us-fertility-rate-is-decreasing-what-it-means-for-the-nations-future/collection_81b09a28-e02f-59b9-b52a-08b15c647dcf.html. (2024).

Marino, Kate. “Infant Mortality Rates Declining, but Sudden Unexpected Infant Death Is on the Rise.” *Infant Mortality Rates Declining, but Sudden Unexpected Infant Death Is on the Rise \| VCU Health*, www.vcuhealth.org/news/infant-mortality-rates-declining-but-sudden-unexpected-infant-death-is-on-the-rise/#:\~:text=Wolf%20attributes%20declining%20overall%20infant,media%20on%20infant%20sleep%20practices.) (https://www.nichd.nih.gov/health/topics/infant-mortality/topicinf.) (2025).

“Where Does Our Data Come From.” *Centers for Disease Control and Prevention*, archive.cdc.gov/www_cdc_gov/surveillance/data-modernization/basics/where_does_our_data_come_from.html. (2023).

Ryabov, Igor. "On the relationship between development and fertility: The case of the United States." Comparative Population Studies 40.4 (2015).

Hamilton, Brady E. "Total fertility rates, by maternal educational attainment and race and Hispanic origin: United States, 2019." (2021).
