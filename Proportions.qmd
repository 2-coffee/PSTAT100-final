---
title: "Proportions"
format: pdf
editor: visual
---

## 

```{r}
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
library(qtl2)
library(janitor)
#A problem we ran into was trying to merge the datasets. I noticed the births columns by ethnicities did not have the same values. 
```

```{r}
fertility_data <- read.csv("~/Desktop/UCSB/PSTAT100-final/fertility_data.csv")
infant_mortality_biannual_data <- read.csv("~/Desktop/UCSB/PSTAT100-final/infant_mortality_biannual_data.csv")
# fertility_data <- read_csv("~/pstat100/final_project/data/fertility_infant_mortality/fertility_data.csv")
# infant_mortality_biannual_data <- read_csv("~/pstat100/final_project/data/fertility_infant_mortality/infant_mortality_biannual_data.csv")
```

```{r}
fertility_update <- fertility_data %>%
  filter(bmcode %in% c(1, 2, 3)) %>%  
  group_by(state, year) %>%  
  summarise(across(births_age1524:pop_age3544, ~sum(., na.rm = TRUE))) %>%  
  mutate(bacode =1,
         across(pop_total:pop_age3544, ~./3)) %>% 
  ungroup() 

# population_data <- fertility_data %>% 
#   group_by(state, year) %>% 
#   summarise(across(pop_total:pop_age3544, ~dplyr::first(na.omit(.)))) %>% 
#   ungroup()

fertility_update2 <- fertility_data %>%
  filter(bmcode %in% c(4, 5, 6)) %>%  
  group_by(state, year) %>%  
  summarise(across(births_age1524:pop_age3544, ~sum(., na.rm = TRUE))) %>%  
  mutate(bacode = 2,
         across(pop_total:pop_age3544, ~./3)) %>% 
  ungroup()

# fertility_update <- fertility_update %>% 
#   left_join(population_data, by =c("state", "year"))

# fertility_update <- fertility_update %>% 
#   mutate(across(pop_total:pop_age3544, ~./3))

# fertility_update2 <- fertility_update2 %>% 
#   left_join(population_data, by =c("state", "year"))

# fertility_update2 <- fertility_update2 %>% 
#   mutate(across(pop_total:pop_age3544, ~./3))

fertility_merged <- bind_rows(fertility_update, fertility_update2)

fertility_merged <- fertility_merged %>% 
  filter(!year == 2024)
  
fertility_merged |>
  summarize(across(births_age1524:births_nonmedicaid, \(x) mean(is.na(x))))

#births_nhblack:births_otherraceeth, deaths_bhblack,deaths_nhwhite,deaths_hisp, deaths_noncon, deaths_neo, deaths_total
infant_mortality_biannual_data |>
  summarize(across(c(births_nhblack:births_otherraceeth, 
                     deaths_nhblack, deaths_nhwhite, deaths_hisp, 
                     deaths_noncon, deaths_neo, deaths_total), 
                   ~ mean(is.na(.))))
```

```{r}
fertility_merged2 <- fertility_merged %>% 
  select(state:bacode) %>% 
  mutate(prop_births_1524 = births_age1524 / births_total,
         prop_births_2534 = births_age2534 / births_total,
         prop_births_3544 = births_age3544 / births_total,
         prop_births_nohs = births_nohs / births_total,
         prop_births_hs = births_hs / births_total,
         prop_births_somecoll = births_somecoll / births_total,
         prop_births_coll = births_coll / births_total,
         prop_births_married = births_married / births_total,
         prop_births_unmarried = births_unmarried / births_total,
         prop_births_medicaid = births_medicaid / births_total,
         prop_births_nhblack = births_nhblack / births_total,
         prop_births_nhwhite = births_nhwhite / births_total,
         prop_births_hisp = births_hisp / births_total,
         prop_births_otherraceeth = births_otherraceeth / births_total,
         # prop_1524 = pop_age1524 / pop_total,
         # prop_2534 = pop_age2534 / pop_total,
         # prop_3544 = pop_age3544 / pop_total,
         # prop_nohs = pop_nohs / pop_total,
         # prop_hs = pop_hs / pop_total,
         # prop_somecoll = pop_somecoll / pop_total,
         # prop_coll = pop_coll / pop_total,
         # prop_married = pop_married /pop_total,
         # prop_unmarried = pop_unmarried / pop_total,
         # prop_medicaid = pop_medicaid / pop_total,
         # prop_nblack = pop_nhblack / pop_total,
         # prop_nwhite = pop_nhwhite / pop_total,
         # prop_hisp = pop_hisp / pop_total,
         # prop_otherraceeth = pop_otherraceeth / pop_total
         fer_rate_1524 = births_age1524 / pop_age1524,
         fer_rate_2534 = births_age2534 / pop_age2534,
         fer_rate_3544 = births_age3544 / pop_age3544,
         fertility_rate_us = 9 * (fer_rate_1524 + fer_rate_2534 + fer_rate_3544)
         )
```

```{r}
# merge and recalculate number of births. 
infant_mort1 <- infant_mortality_biannual_data |>
  rename("infant_births_total"=births_total) |>
  mutate(across(starts_with("births_"), ~ .x/infant_births_total, .names="prop_{.col}")) |>
  select( c(starts_with("deaths_"),starts_with("prop_births"), infant_births_total, state,year,bacode)) |>
  filter(year >=2016) 

infant_mort1 <- infant_mort1 |>
  mutate(across(colnames(infant_mort1), ~ replace_na(.x,0)))


fertil_merg_filter <- fertility_merged2 |> select(c(starts_with("prop_births"),births_total, state, year,bacode)) |> select(11:18)
  
prop_only_merge <- infant_mort1 |>
  left_join(fertil_merg_filter, by=join_by(state,year,bacode)) |>
  mutate(
    norm_births_nhblack = (prop_births_nhblack.x + prop_births_nhblack.y)/2,
    norm_births_nhwhite =( prop_births_nhwhite.x + prop_births_nhwhite.y)/2,
    norm_births_hisp = (prop_births_hisp.x + prop_births_hisp.y)/2,
    norm_births_otherraceeth = (prop_births_otherraceeth.x + prop_births_otherraceeth.y)/2,
    norm_total_births = (infant_births_total+births_total)/2
  ) |>
  mutate(across(starts_with("norm_births_"), ~round(.x*norm_total_births,0), .names="{.col}")) |>
  select(-c(starts_with("prop_"))) |>
  mutate(across(starts_with("deaths_"), ~ round(.x/norm_total_births*1000, 2), .names="infantMort_{.col}")) #|>
  #mutate(across(starts_with("norm_births_"), ~ round(.x/norm_total_births*1000, 2), .names#="fertilityRate_{.col}"))

  
fertility_mortality <- fertility_merged2 |>
  left_join(infant_mortality_biannual_data, by = join_by(state,year, bacode)) |>
  select(-c(ends_with(".x"), ends_with(".y"), starts_with("deaths"))) |>
  left_join(prop_only_merge, by=join_by(state,year,bacode)) |>
  mutate(fer_rate_nhblack = norm_births_nhblack / pop_nhblack,
         fer_rate_nhwhite = norm_births_nhwhite / pop_nhwhite,
         fer_rate_hisp = norm_births_hisp / pop_hisp,
         fer_rate_otherraceeth = norm_births_otherraceeth / pop_otherraceeth)
  
median_income <- read.csv('~/pstat100/final_project/median_income_2016_2023.csv')


```

```{r}
births_deaths <- fertility_mortality %>% 
  select(state, year, bacode, births_age1524:births_nonmedicaid, fer_rate_1524:fertility_rate_us, exposed_infdeaths, deaths_nhblack:deaths_total, infant_births_total:infantMort_deaths_total, fer_rate_nhblack:fer_rate_otherraceeth ) %>% 
  mutate(norm_total_births = round(norm_total_births, 0),
         region = case_when(
           state %in% c("California", "Oregon", "Washington", "Idaho", "Nevada", "Utah", "Colorado", "Montana", "Wyoming", "Hawaii", "Alaska") ~ "West",
           state %in% c("Arizona", "New Mexico", "Texas", "Oklahoma") ~ "Southwest",
           state %in% c("Kansas", "Nebraska", "South Dakota", "North Dakota", "Missouri", "Iowa", "Minnesota", "Illinois", "Wisconsin", "Indiana", "Ohio", "Michigan") ~ "Midwest",
           state %in% c("Arkansas", "Louisiana", "Mississippi", "Alabama", "Tennessee", "Georgia", "Florida", "South Carolina", "North Carolina", "Kentucky", "Virginia", "West Virginia", "Delaware", "District of Columbia") ~ "Southeast",
           state %in% c("New Jersey", "Pennsylvania", "Maryland", "Connecticut", "Rhode Island", "Massachusetts", "Vermont", "New Hampshire", "Maine", "New York") ~ "Northeast",
           TRUE ~ "missing"
         ))

population_update <- fertility_mortality %>% 
  select(state, year, bacode, pop_total:pop_age3544, prop_births_1524:prop_births_otherraceeth)

births_deaths <- births_deaths %>% 
  left_join(median_income, by = c("state", "year"))
```

```{r}
library(ggplot2)

#do states with higher medicaid have higher or lower births?
ggplot(births_deaths, aes(x = births_medicaid, y = norm_total_births)) + geom_point() + geom_smooth(method = "lm") + labs(x = "Births on Medicaid", y = "Total Births")

#wont work
ggplot(births_deaths, aes(x = births_medicaid, y = deaths_total)) + geom_point() + geom_smooth(method = "lm")
```

```{r}
# fertility_edu <- fertility_years %>% 
#   pivot_longer(cols = c("births_nohs", "births_hs", "births_somecoll", "births_coll"), names_to = "edu_backg", values_to = "edu_births")

#ethinicity births, histogram is also right skewed
ethi_births <- births_deaths %>% 
  select(starts_with("norm_births"), year, bacode, state, region) %>% 
  pivot_longer(cols = starts_with("norm_births"), names_to = "ethnicity", values_to = "eth_births") 

eth_median <- ethi_births %>% 
  group_by(year,ethnicity) %>%
  summarise(median = median(eth_births))

eth_region <- ethi_births %>% 
  group_by(region, ethnicity) %>% 
  summarise(median_region = median(eth_births))

ggplot(ethi_births, aes(x = ethnicity, y = eth_births, fill = ethnicity)) + geom_bar(stat = "identity")

#median births per year
ggplot(eth_median, aes(x = year, y = median, color = ethnicity, group = ethnicity)) + geom_point() + geom_line()

ggplot(eth_region, aes(x = region, y = median_region, color = ethnicity, group = ethnicity)) + geom_point() + geom_line()
```

```{r}
ethi_deaths <- births_deaths %>% 
  select(deaths_nhblack, deaths_nhwhite, deaths_hisp, deaths_otherraceeth, year, bacode, state, region) %>% 
  pivot_longer(cols = c(deaths_nhblack, deaths_nhwhite, deaths_hisp, deaths_otherraceeth), names_to = "ethnicity", values_to = "eth_deaths")
```

```{r}
#education 
education_data <- births_deaths %>% 
  pivot_longer(cols = c(births_nohs, births_hs, births_somecoll, births_coll),
               names_to = "education_level",
               values_to = "births")
#right skewed
#hist(education_data$births)

education_median <- education_data %>% 
  group_by(year, education_level) %>% 
  summarise(median_births = median(births))

education_region <- education_data %>% 
  group_by(region, education_level) %>% 
  summarise(median_births = median(births))

#bar graph of education level
ggplot(education_data, aes(x = education_level, y = births, fill = education_level)) + geom_bar(stat = "identity")

#median births per year
ggplot(education_median, aes(x = year, y = median_births, color = education_level, group = education_level)) + geom_point() + geom_line()

ggplot(education_region, aes(x = region, y = median_births, color = education_level, group = education_level)) + geom_point() + geom_line()
```

```{r}
library(dplyr)
library(gt)

ethi_births %>% #PVIOT THIS
  group_by(region, ethnicity) %>%
  summarise(Total_Births = sum(eth_births)) %>%
  mutate(ethnicity = recode(ethnicity,
                            "norm_births_hisp" = "Hispanic",
                            "norm_births_nhblack" = "Non-Hispanic Black",
                            "norm_births_nhwhite" = "Non-Hispanic White",
                            "norm_births_otherraceeth" = "Other Race")) %>%
  pivot_wider(
    names_from = region,
    values_from = Total_Births,
  ) %>% select(ethnicity,West,Southwest,Midwest,Southeast,Northeast) |>
  gt() %>%
  cols_label(
    ethnicity = "Ethnicity") %>%
  tab_header(
    title = "Births by Ethnicity Across U.S. Regions"
  )

ethi_births %>% 
  group_by(ethnicity) %>%
  summarise(Total_Births = sum(eth_births)) %>%
  mutate(ethnicity = recode(ethnicity,
                            "norm_births_hisp" = "Hispanic",
                            "norm_births_nhblack" = "Non-Hispanic Black",
                            "norm_births_nhwhite" = "Non-Hispanic White",
                            "norm_births_otherraceeth" = "Other Race")) %>% 
  gt() %>%
  cols_label(
    ethnicity = "Ethnicity", 
    Total_Births = "Total Births") %>% 
  tab_header(
    title = "Births by Ethnicity in the United States"
  ) 


# ethi_deaths <- births_deaths %>% 
#   select(deaths_nhblack, deaths_nhwhite, deaths_hisp, deaths_otherraceeth, year, bacode, state, region) %>% 
#   pivot_longer(cols = c(deaths_nhblack, deaths_nhwhite, deaths_hisp, deaths_otherraceeth), names_to = "ethnicity", values_to = "eth_deaths")

ethi_deaths %>% 
  group_by(ethnicity) %>% 
  summarise(total_deaths = sum(eth_deaths)) %>% 
  mutate(ethnicity = recode(ethnicity,
                            "deaths_hisp" = "Hispanic",
                            "deaths_nhblack" = "Non-Hispanic Black",
                            "deaths_nhwhite" = "Non-Hispanic White",
                            "deaths_otherraceeth" = "Other Race")) %>%
  gt() %>% 
  cols_label(
    ethnicity = "Ethnicity", 
    total_deaths = "Total Births") %>% 
  tab_header(
    title = "Infant Deaths by Ethnicity in the United States"
  ) 

ethi_deaths %>% # FIXED THE PIVOT
  group_by(region, ethnicity) %>% 
  summarise(total_deaths = sum(eth_deaths)) %>% 
  mutate(ethnicity = recode(ethnicity,
                            "deaths_hisp" = "Hispanic",
                            "deaths_nhblack" = "Non-Hispanic Black",
                            "deaths_nhwhite" = "Non-Hispanic White",
                            "deaths_otherraceeth" = "Other Race")) |>
  pivot_wider(
    names_from = region,
    values_from = total_deaths,
  ) %>% select(ethnicity,West,Southwest,Midwest,Southeast,Northeast) |>
  gt() %>% 
  cols_label(
    ethnicity = "Ethnicity") %>% 
  tab_header(
    title = "Infant Deaths by Ethnicity by U.S. Region"
  ) 
  
#work with raw data first
#compare infant mortality rates
#color by fertility rates (age group) scatterplot x = fertility y = mortality 
#how do ethnic, educational, and regional factors influence birth rates and infant mortality trends across the US from 2016 to 2023?
# make 2 more tables for fertility rates and infant mortality rates.
```

```{r}
fertility_rate <- births_deaths %>% 
  pivot_longer(cols = matches("fer_rate_[0-9]"),
               names_to = "fertility_rate_age",
               values_to = "rate")
hist(fertility_rate$rate)

fertility_mode <- fertility_rate %>% 
  group_by(region, fertility_rate_age) %>% 
  summarise(mode_rate = median(rate))

ggplot(fertility_mode, aes(x = region, y = mode_rate, color = fertility_rate_age, group = fertility_rate_age)) + 
  geom_point() + geom_line()
```

```{r}
set.seed(314)
kmeans_result <- kmeans(fertility_rate$rate, centers = 2)
fertility_rate$cluster <- kmeans_result$cluster

ggplot(fertility_rate, aes(x = rate, fill = as.factor(cluster))) +
  geom_histogram()

first_cluster <- fertility_rate %>% 
  filter(cluster ==1)

fertility_median1 <- first_cluster %>% 
  group_by(region, fertility_rate_age) %>% 
  summarise(median_rate = median(rate))

second_cluster <- fertility_rate %>% 
  filter(cluster ==2)

fertility_median2 <- second_cluster %>% 
  group_by(region, fertility_rate_age) %>% 
  summarise(median_rate = median(rate))

ggplot(fertility_median1, aes(x = region, y = median_rate, color = fertility_rate_age, group = fertility_rate_age)) + geom_point() + geom_line()

ggplot(fertility_median2, aes(x = region, y = median_rate, color = fertility_rate_age, group = fertility_rate_age)) + geom_point() + geom_line()
```


```{r}
age_data <- births_deaths %>% 
  select(starts_with("births_age"), year, region) %>% 
  pivot_longer(cols = starts_with("births_age"),
               names_to = "age_groups",
               values_to = "births")

hist(age_data$births)

age_median <- age_data %>% 
  group_by(year, age_groups) %>% 
  summarise(median_births = median(births))

age_median1 <- age_data %>% 
  group_by(region, age_groups) %>% 
  summarise(median_births = median(births))

#bar graph of education level
ggplot(age_data, aes(x = age_groups, y = births, fill = age_groups)) + geom_bar(stat = "identity")

ggplot(age_median1, aes(x = region, y = median_births, color = age_groups, group = age_groups)) + geom_point() + geom_line()

ggplot(age_median, aes(x = year, y = median_births, color = age_groups, group = age_groups)) + geom_point() + geom_line()
```

```{r}
inf_fer_rates  <- births_deaths |> select(state, year, bacode, infantMort_deaths_nhblack:region, -infantMort_deaths_con,-infantMort_deaths_noncon,
                        -infantMort_deaths_neo,-infantMort_deaths_total) 

inf_fer_rates1 <- inf_fer_rates |> select(state:infantMort_deaths_otherraceeth,region) |>
  pivot_longer(
    cols = starts_with("infantMort_"),
    names_to = "ethnicity",
    values_to = "InfantMortality"
  ) |>
  mutate(ethnicity = recode(ethnicity,
                            "infantMort_deaths_hisp" = "Hispanic",
                            "infantMort_deaths_nhblack" = "Non-Hispanic Black",
                            "infantMort_deaths_nhwhite" = "Non-Hispanic White",
                            "infantMort_deaths_otherraceeth" = "Other Race"))


inf_fer_rates2 <- inf_fer_rates  |> select(c(state:bacode, fer_rate_nhblack:region)) |>
  pivot_longer(
    cols= starts_with("fer_rate"),
    names_to = "ethnicity",
    values_to = "FertilityRate"
  ) |> 
  mutate(ethnicity = recode(ethnicity,
                            "fer_rate_hisp" = "Hispanic",
                            "fer_rate_nhblack" = "Non-Hispanic Black",
                            "fer_rate_nhwhite" = "Non-Hispanic White",
                            "fer_rate_otherraceeth" = "Other Race"))

inf_fer_rates_main <- inf_fer_rates1 |> 
  left_join(inf_fer_rates2, by=join_by(state,year,ethnicity,region,bacode))
  # pivot_wider(
  #   names_from=region,
  #   values_from=c(InfantMortality, FertilityRate)
  #   
  # )
inf_fer_rates_main
inf_fer_rates_main |> ggplot(aes(y=InfantMortality, x=FertilityRate, col=ethnicity)) +
  geom_point() +
  scale_y_sqrt() +
  facet_wrap(vars(region))

# y=fertility
# x=mortality
# color=eth
# facet(regions)

```

get correlation matrix?  
pick pcs?  
linear regressions  
analyze pcs by table  
graph pc1 to pc2 ?  
densities on the side of the plots   

problems at the end
